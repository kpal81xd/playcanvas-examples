import { Http, http } from '../../platform/net/http.js';
import { AnimStateGraph } from '../anim/state-graph/anim-state-graph.js';
import { ResourceHandler } from './handler.js';

/**
 * Resource handler used for loading {@link AnimStateGraph} resources.
 *
 * @ignore
 */
class AnimStateGraphHandler extends ResourceHandler {
  constructor(app) {
    super(app, 'animstategraph');
  }
  load(url, callback) {
    if (typeof url === 'string') {
      url = {
        load: url,
        original: url
      };
    }

    // we need to specify JSON for blob URLs
    const options = {
      retry: this.maxRetries > 0,
      maxRetries: this.maxRetries
    };
    if (url.load.startsWith('blob:')) {
      options.responseType = Http.ResponseType.JSON;
    }
    http.get(url.load, options, function (err, response) {
      if (err) {
        callback(`Error loading animation state graph resource: ${url.original} [${err}]`);
      } else {
        callback(null, response);
      }
    });
  }
  open(url, data) {
    return new AnimStateGraph(data);
  }
}

export { AnimStateGraphHandler };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5pbS1zdGF0ZS1ncmFwaC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2ZyYW1ld29yay9oYW5kbGVycy9hbmltLXN0YXRlLWdyYXBoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGh0dHAsIEh0dHAgfSBmcm9tICcuLi8uLi9wbGF0Zm9ybS9uZXQvaHR0cC5qcyc7XG5pbXBvcnQgeyBBbmltU3RhdGVHcmFwaCB9IGZyb20gJy4uL2FuaW0vc3RhdGUtZ3JhcGgvYW5pbS1zdGF0ZS1ncmFwaC5qcyc7XG5cbmltcG9ydCB7IFJlc291cmNlSGFuZGxlciB9IGZyb20gJy4vaGFuZGxlci5qcyc7XG5cbi8qKlxuICogUmVzb3VyY2UgaGFuZGxlciB1c2VkIGZvciBsb2FkaW5nIHtAbGluayBBbmltU3RhdGVHcmFwaH0gcmVzb3VyY2VzLlxuICpcbiAqIEBpZ25vcmVcbiAqL1xuY2xhc3MgQW5pbVN0YXRlR3JhcGhIYW5kbGVyIGV4dGVuZHMgUmVzb3VyY2VIYW5kbGVyIHtcbiAgICBjb25zdHJ1Y3RvcihhcHApIHtcbiAgICAgICAgc3VwZXIoYXBwLCAnYW5pbXN0YXRlZ3JhcGgnKTtcbiAgICB9XG5cbiAgICBsb2FkKHVybCwgY2FsbGJhY2spIHtcbiAgICAgICAgaWYgKHR5cGVvZiB1cmwgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICB1cmwgPSB7XG4gICAgICAgICAgICAgICAgbG9hZDogdXJsLFxuICAgICAgICAgICAgICAgIG9yaWdpbmFsOiB1cmxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICAvLyB3ZSBuZWVkIHRvIHNwZWNpZnkgSlNPTiBmb3IgYmxvYiBVUkxzXG4gICAgICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICAgICAgICByZXRyeTogdGhpcy5tYXhSZXRyaWVzID4gMCxcbiAgICAgICAgICAgIG1heFJldHJpZXM6IHRoaXMubWF4UmV0cmllc1xuICAgICAgICB9O1xuXG4gICAgICAgIGlmICh1cmwubG9hZC5zdGFydHNXaXRoKCdibG9iOicpKSB7XG4gICAgICAgICAgICBvcHRpb25zLnJlc3BvbnNlVHlwZSA9IEh0dHAuUmVzcG9uc2VUeXBlLkpTT047XG4gICAgICAgIH1cblxuICAgICAgICBodHRwLmdldCh1cmwubG9hZCwgb3B0aW9ucywgZnVuY3Rpb24gKGVyciwgcmVzcG9uc2UpIHtcbiAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhgRXJyb3IgbG9hZGluZyBhbmltYXRpb24gc3RhdGUgZ3JhcGggcmVzb3VyY2U6ICR7dXJsLm9yaWdpbmFsfSBbJHtlcnJ9XWApO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLCByZXNwb25zZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIG9wZW4odXJsLCBkYXRhKSB7XG4gICAgICAgIHJldHVybiBuZXcgQW5pbVN0YXRlR3JhcGgoZGF0YSk7XG4gICAgfVxufVxuXG5leHBvcnQgeyBBbmltU3RhdGVHcmFwaEhhbmRsZXIgfTtcbiJdLCJuYW1lcyI6WyJBbmltU3RhdGVHcmFwaEhhbmRsZXIiLCJSZXNvdXJjZUhhbmRsZXIiLCJjb25zdHJ1Y3RvciIsImFwcCIsImxvYWQiLCJ1cmwiLCJjYWxsYmFjayIsIm9yaWdpbmFsIiwib3B0aW9ucyIsInJldHJ5IiwibWF4UmV0cmllcyIsInN0YXJ0c1dpdGgiLCJyZXNwb25zZVR5cGUiLCJIdHRwIiwiUmVzcG9uc2VUeXBlIiwiSlNPTiIsImh0dHAiLCJnZXQiLCJlcnIiLCJyZXNwb25zZSIsIm9wZW4iLCJkYXRhIiwiQW5pbVN0YXRlR3JhcGgiXSwibWFwcGluZ3MiOiI7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTUEscUJBQXFCLFNBQVNDLGVBQWUsQ0FBQztFQUNoREMsV0FBV0EsQ0FBQ0MsR0FBRyxFQUFFO0FBQ2IsSUFBQSxLQUFLLENBQUNBLEdBQUcsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFBO0FBQ2hDLEdBQUE7QUFFQUMsRUFBQUEsSUFBSUEsQ0FBQ0MsR0FBRyxFQUFFQyxRQUFRLEVBQUU7QUFDaEIsSUFBQSxJQUFJLE9BQU9ELEdBQUcsS0FBSyxRQUFRLEVBQUU7QUFDekJBLE1BQUFBLEdBQUcsR0FBRztBQUNGRCxRQUFBQSxJQUFJLEVBQUVDLEdBQUc7QUFDVEUsUUFBQUEsUUFBUSxFQUFFRixHQUFBQTtPQUNiLENBQUE7QUFDTCxLQUFBOztBQUVBO0FBQ0EsSUFBQSxNQUFNRyxPQUFPLEdBQUc7QUFDWkMsTUFBQUEsS0FBSyxFQUFFLElBQUksQ0FBQ0MsVUFBVSxHQUFHLENBQUM7TUFDMUJBLFVBQVUsRUFBRSxJQUFJLENBQUNBLFVBQUFBO0tBQ3BCLENBQUE7SUFFRCxJQUFJTCxHQUFHLENBQUNELElBQUksQ0FBQ08sVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFO0FBQzlCSCxNQUFBQSxPQUFPLENBQUNJLFlBQVksR0FBR0MsSUFBSSxDQUFDQyxZQUFZLENBQUNDLElBQUksQ0FBQTtBQUNqRCxLQUFBO0FBRUFDLElBQUFBLElBQUksQ0FBQ0MsR0FBRyxDQUFDWixHQUFHLENBQUNELElBQUksRUFBRUksT0FBTyxFQUFFLFVBQVVVLEdBQUcsRUFBRUMsUUFBUSxFQUFFO0FBQ2pELE1BQUEsSUFBSUQsR0FBRyxFQUFFO1FBQ0xaLFFBQVEsQ0FBRSxpREFBZ0RELEdBQUcsQ0FBQ0UsUUFBUyxDQUFJVyxFQUFBQSxFQUFBQSxHQUFJLEdBQUUsQ0FBQyxDQUFBO0FBQ3RGLE9BQUMsTUFBTTtBQUNIWixRQUFBQSxRQUFRLENBQUMsSUFBSSxFQUFFYSxRQUFRLENBQUMsQ0FBQTtBQUM1QixPQUFBO0FBQ0osS0FBQyxDQUFDLENBQUE7QUFDTixHQUFBO0FBRUFDLEVBQUFBLElBQUlBLENBQUNmLEdBQUcsRUFBRWdCLElBQUksRUFBRTtBQUNaLElBQUEsT0FBTyxJQUFJQyxjQUFjLENBQUNELElBQUksQ0FBQyxDQUFBO0FBQ25DLEdBQUE7QUFDSjs7OzsifQ==
