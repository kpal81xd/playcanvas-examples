import { http } from '../../platform/net/http.js';
import { Template } from '../template.js';
import { ResourceHandler } from './handler.js';

class TemplateHandler extends ResourceHandler {
  constructor(app) {
    super(app, 'template');
  }
  load(url, callback) {
    if (typeof url === 'string') {
      url = {
        load: url,
        original: url
      };
    }

    // we need to specify JSON for blob URLs
    const options = {
      retry: this.maxRetries > 0,
      maxRetries: this.maxRetries
    };
    http.get(url.load, options, function (err, response) {
      if (err) {
        callback('Error requesting template: ' + url.original);
      } else {
        callback(err, response);
      }
    });
  }
  open(url, data) {
    return new Template(this._app, data);
  }
}

export { TemplateHandler };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9mcmFtZXdvcmsvaGFuZGxlcnMvdGVtcGxhdGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaHR0cCB9IGZyb20gJy4uLy4uL3BsYXRmb3JtL25ldC9odHRwLmpzJztcblxuaW1wb3J0IHsgVGVtcGxhdGUgfSBmcm9tICcuLi90ZW1wbGF0ZS5qcyc7XG5cbmltcG9ydCB7IFJlc291cmNlSGFuZGxlciB9IGZyb20gJy4vaGFuZGxlci5qcyc7XG5cbmNsYXNzIFRlbXBsYXRlSGFuZGxlciBleHRlbmRzIFJlc291cmNlSGFuZGxlciB7XG4gICAgY29uc3RydWN0b3IoYXBwKSB7XG4gICAgICAgIHN1cGVyKGFwcCwgJ3RlbXBsYXRlJyk7XG4gICAgfVxuXG4gICAgbG9hZCh1cmwsIGNhbGxiYWNrKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdXJsID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgdXJsID0ge1xuICAgICAgICAgICAgICAgIGxvYWQ6IHVybCxcbiAgICAgICAgICAgICAgICBvcmlnaW5hbDogdXJsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gd2UgbmVlZCB0byBzcGVjaWZ5IEpTT04gZm9yIGJsb2IgVVJMc1xuICAgICAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgICAgICAgcmV0cnk6IHRoaXMubWF4UmV0cmllcyA+IDAsXG4gICAgICAgICAgICBtYXhSZXRyaWVzOiB0aGlzLm1heFJldHJpZXNcbiAgICAgICAgfTtcblxuICAgICAgICBodHRwLmdldCh1cmwubG9hZCwgb3B0aW9ucywgZnVuY3Rpb24gKGVyciwgcmVzcG9uc2UpIHtcbiAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjaygnRXJyb3IgcmVxdWVzdGluZyB0ZW1wbGF0ZTogJyArIHVybC5vcmlnaW5hbCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVyciwgcmVzcG9uc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBvcGVuKHVybCwgZGF0YSkge1xuICAgICAgICByZXR1cm4gbmV3IFRlbXBsYXRlKHRoaXMuX2FwcCwgZGF0YSk7XG4gICAgfVxufVxuXG5leHBvcnQgeyBUZW1wbGF0ZUhhbmRsZXIgfTtcbiJdLCJuYW1lcyI6WyJUZW1wbGF0ZUhhbmRsZXIiLCJSZXNvdXJjZUhhbmRsZXIiLCJjb25zdHJ1Y3RvciIsImFwcCIsImxvYWQiLCJ1cmwiLCJjYWxsYmFjayIsIm9yaWdpbmFsIiwib3B0aW9ucyIsInJldHJ5IiwibWF4UmV0cmllcyIsImh0dHAiLCJnZXQiLCJlcnIiLCJyZXNwb25zZSIsIm9wZW4iLCJkYXRhIiwiVGVtcGxhdGUiLCJfYXBwIl0sIm1hcHBpbmdzIjoiOzs7O0FBTUEsTUFBTUEsZUFBZSxTQUFTQyxlQUFlLENBQUM7RUFDMUNDLFdBQVdBLENBQUNDLEdBQUcsRUFBRTtBQUNiLElBQUEsS0FBSyxDQUFDQSxHQUFHLEVBQUUsVUFBVSxDQUFDLENBQUE7QUFDMUIsR0FBQTtBQUVBQyxFQUFBQSxJQUFJQSxDQUFDQyxHQUFHLEVBQUVDLFFBQVEsRUFBRTtBQUNoQixJQUFBLElBQUksT0FBT0QsR0FBRyxLQUFLLFFBQVEsRUFBRTtBQUN6QkEsTUFBQUEsR0FBRyxHQUFHO0FBQ0ZELFFBQUFBLElBQUksRUFBRUMsR0FBRztBQUNURSxRQUFBQSxRQUFRLEVBQUVGLEdBQUFBO09BQ2IsQ0FBQTtBQUNMLEtBQUE7O0FBRUE7QUFDQSxJQUFBLE1BQU1HLE9BQU8sR0FBRztBQUNaQyxNQUFBQSxLQUFLLEVBQUUsSUFBSSxDQUFDQyxVQUFVLEdBQUcsQ0FBQztNQUMxQkEsVUFBVSxFQUFFLElBQUksQ0FBQ0EsVUFBQUE7S0FDcEIsQ0FBQTtBQUVEQyxJQUFBQSxJQUFJLENBQUNDLEdBQUcsQ0FBQ1AsR0FBRyxDQUFDRCxJQUFJLEVBQUVJLE9BQU8sRUFBRSxVQUFVSyxHQUFHLEVBQUVDLFFBQVEsRUFBRTtBQUNqRCxNQUFBLElBQUlELEdBQUcsRUFBRTtBQUNMUCxRQUFBQSxRQUFRLENBQUMsNkJBQTZCLEdBQUdELEdBQUcsQ0FBQ0UsUUFBUSxDQUFDLENBQUE7QUFDMUQsT0FBQyxNQUFNO0FBQ0hELFFBQUFBLFFBQVEsQ0FBQ08sR0FBRyxFQUFFQyxRQUFRLENBQUMsQ0FBQTtBQUMzQixPQUFBO0FBQ0osS0FBQyxDQUFDLENBQUE7QUFDTixHQUFBO0FBRUFDLEVBQUFBLElBQUlBLENBQUNWLEdBQUcsRUFBRVcsSUFBSSxFQUFFO0lBQ1osT0FBTyxJQUFJQyxRQUFRLENBQUMsSUFBSSxDQUFDQyxJQUFJLEVBQUVGLElBQUksQ0FBQyxDQUFBO0FBQ3hDLEdBQUE7QUFDSjs7OzsifQ==
